"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка. Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран. Подсказка: для данного задания примем, что
пользователь может вводить только числа и строки. При вводе пользователем очередного элемента необходимо реализовать
проверку типа элемента и вносить его в список, только если введено число. Класс-исключение должен не позволить
пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна
завершаться."""


class CheckOnNumbers(Exception):
    def __init__(self, txt):
        self.txt = txt


def get_numbers_to_list():
    list_numbers = []
    while True:
        input_data = input('Give me numbers or write stop(q):')
        if input_data.lower() in ['stop', 'q']:
            break

        for number in input_data.split():
            try:
                if not number.isdigit():
                    raise CheckOnNumbers('I said give a numbers :)')
                list_numbers.append(number)
            except CheckOnNumbers as err:
                print(err)
    return list_numbers


print(get_numbers_to_list())
